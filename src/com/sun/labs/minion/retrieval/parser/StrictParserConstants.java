/* Generated By:JJTree&JavaCC: Do not edit this line. StrictParserConstants.java */
package com.sun.labs.minion.retrieval.parser;

public interface StrictParserConstants {

  int EOF = 0;
  int AND = 25;
  int PAND = 26;
  int OR = 27;
  int TOR = 28;
  int SAND = 29;
  int SOR = 30;
  int PHRASE = 31;
  int EXACT = 32;
  int CASE = 33;
  int HIDE = 34;
  int MORPH = 35;
  int WILD = 36;
  int STEM = 37;
  int WORD = 38;
  int EXPAND = 39;
  int STARTS = 40;
  int ENDS = 41;
  int MATCHES = 42;
  int SUBSTRING = 43;
  int SIMILAR = 44;
  int PASSAGE = 45;
  int SPANS = 46;
  int SEQUENCE = 47;
  int IF = 48;
  int CONTAINS = 49;
  int NEAR = 50;
  int NEARN = 51;
  int WEIGHT = 52;
  int NOT = 53;
  int UNDEFINED = 54;
  int WITHIN = 55;
  int NOTEQUAL = 56;
  int EQUALS = 57;
  int LESS = 58;
  int GREATER = 59;
  int LEQ = 60;
  int GEQ = 61;
  int LP = 62;
  int RP = 63;
  int LT = 64;
  int GT = 65;
  int BSLASH = 66;
  int DUBQUOTE = 67;
  int SINQUOTE = 68;
  int INTEGER = 69;
  int DECIMAL = 70;
  int WORDSTRING = 71;
  int LETTER = 72;
  int VALIDCHAR = 73;
  int WHITESPACE = 74;
  int WHITECHAR = 75;
  int SPACESEPTOKEN = 76;
  int SPACESEPCHAR = 77;
  int SPACESEPCHAR1 = 78;
  int SPACESEPCHAR2 = 79;
  int SPACESEPCHAR3 = 80;
  int SPACESEPCHAR4 = 81;
  int SPACESEPCHAR5 = 82;
  int SPACESEPCHAR6 = 83;
  int SPACESEPCHAR7 = 84;
  int SPACESEPCHAR8 = 85;
  int SPACESEPCHAR9 = 86;
  int NGRAMTOKEN = 87;
  int NONSPACESEPCHAR = 88;
  int PUNCTUATION = 89;
  int PUNCTCHAR1 = 90;
  int PUNCTCHAR2 = 91;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\u00a0\"",
    "\"\\u1680\"",
    "\"\\u180e\"",
    "\"\\u2000\"",
    "\"\\u2001\"",
    "\"\\u2002\"",
    "\"\\u2003\"",
    "\"\\u2004\"",
    "\"\\u2005\"",
    "\"\\u2006\"",
    "\"\\u2007\"",
    "\"\\u2008\"",
    "\"\\u2009\"",
    "\"\\u200a\"",
    "\"\\u200b\"",
    "\"\\u2028\"",
    "\"\\u2029\"",
    "\"\\u202f\"",
    "\"\\u205f\"",
    "\"\\u3000\"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<AND>",
    "<PAND>",
    "<OR>",
    "<TOR>",
    "<SAND>",
    "<SOR>",
    "<PHRASE>",
    "<EXACT>",
    "<CASE>",
    "<HIDE>",
    "<MORPH>",
    "<WILD>",
    "<STEM>",
    "<WORD>",
    "<EXPAND>",
    "<STARTS>",
    "<ENDS>",
    "<MATCHES>",
    "<SUBSTRING>",
    "<SIMILAR>",
    "<PASSAGE>",
    "<SPANS>",
    "<SEQUENCE>",
    "<IF>",
    "<CONTAINS>",
    "<NEAR>",
    "<NEARN>",
    "<WEIGHT>",
    "<NOT>",
    "<UNDEFINED>",
    "<WITHIN>",
    "<NOTEQUAL>",
    "<EQUALS>",
    "<LESS>",
    "<GREATER>",
    "<LEQ>",
    "<GEQ>",
    "<LP>",
    "<RP>",
    "<LT>",
    "<GT>",
    "<BSLASH>",
    "<DUBQUOTE>",
    "<SINQUOTE>",
    "<INTEGER>",
    "<DECIMAL>",
    "<WORDSTRING>",
    "<LETTER>",
    "<VALIDCHAR>",
    "<WHITESPACE>",
    "<WHITECHAR>",
    "<SPACESEPTOKEN>",
    "<SPACESEPCHAR>",
    "<SPACESEPCHAR1>",
    "<SPACESEPCHAR2>",
    "<SPACESEPCHAR3>",
    "<SPACESEPCHAR4>",
    "<SPACESEPCHAR5>",
    "<SPACESEPCHAR6>",
    "<SPACESEPCHAR7>",
    "<SPACESEPCHAR8>",
    "<SPACESEPCHAR9>",
    "<NGRAMTOKEN>",
    "<NONSPACESEPCHAR>",
    "<PUNCTUATION>",
    "<PUNCTCHAR1>",
    "<PUNCTCHAR2>",
  };

}
